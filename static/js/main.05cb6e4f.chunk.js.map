{"version":3,"sources":["components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","headerText","text","Footer","className","href","viewBox","fill","xmlns","width","height","d","stroke","App","select_color","colors","Math","floor","random","length","style","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mQAWeA,EATA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACb,OACI,6BACI,4BAAKA,GACL,iCAAO,kBAAC,IAAD,CAAmBC,KAAM,CAAC,qBAAsB,mBAAoB,oBAAqB,iBAAhG,oBCQGC,EAZA,WACX,OACI,yBAAKC,UAAU,UACf,6BACI,0CAAe,uBAAGC,KAAK,uBAAuBD,UAAU,aACxD,yBAAKA,UAAU,WAAWE,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MAAK,0BAAMC,EAAE,wEAAwEC,OAAO,iBAAsB,0BAAMD,EAAE,mJAAmJC,OAAO,iBAAsB,0BAAMD,EAAE,qJAAqJC,OAAO,iBAAsB,0BAAMD,EAAE,uCAAuCC,OAAO,kBAD1nB,oBCoCZC,MArCf,WACE,SAASC,IAEH,IAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WAC5D,OAAOA,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,SAEtD,OACE,yBAAKf,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,CAAQH,WAAW,mBACnB,6BACA,uBAAGI,KAAK,kCAAkCD,UAAU,QACpD,yBAAKgB,MAAO,CAACC,MAAMP,KAAiBR,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKL,KAAK,mCACjI,0BAAMM,EAAE,+kFAA+kFJ,KAAK,mBAI9lF,uBAAGF,KAAK,IAAID,UAAU,QACtB,yBAAKgB,MAAO,CAACC,MAAMP,KAAiBR,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MACvH,0BAAMC,EAAE,oQAAoQJ,KAAK,mBAInR,uBAAGF,KAAK,6CAA6CD,UAAU,QAC/D,yBAAKgB,MAAO,CAACC,MAAMP,KAAiBR,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MAAK,0BAAMC,EAAE,oHAAoHC,OAAO,mBAGjQ,uBAAGP,KAAK,gDAAgDD,UAAU,QAClE,yBAAKgB,MAAO,CAACC,MAAMP,KAAiBR,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MAAK,0BAAMC,EAAE,qUAAqUJ,KAAK,oBAGhd,kBAAC,EAAD,SCxBYe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.05cb6e4f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\nconst Header = ({headerText}) => {\n    return(\n        <div>\n            <h1>{headerText}</h1>\n            <h4>A {<ReactTypingEffect text={['computer scientist', 'graduate student', 'software engineer', 'bad blogger']}/>}from Minnesota</h4>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n        <div>\n            <p>powered by: <a href='https://reactjs.org/' className=\"Blue-Icon\">\n            <svg className=\"App-logo\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"><path d=\"M14.5 7.584c0 1.657-3.134 3-7 3s-7-1.343-7-3 3.134-3 7-3 7 1.343 7 3z\" stroke=\"currentColor\"></path><path d=\"M4.166 13.739c1.457.79 4.13-1.327 5.972-4.726 1.841-3.4 2.153-6.795.696-7.584-1.457-.79-4.13 1.327-5.972 4.726-1.841 3.4-2.153 6.795-.696 7.584z\" stroke=\"currentColor\"></path><path d=\"M10.834 13.739c-1.457.79-4.13-1.327-5.972-4.726-1.841-3.4-2.153-6.795-.696-7.584 1.457-.79 4.13 1.327 5.972 4.726 1.841 3.4 2.153 6.795.696 7.584z\" stroke=\"currentColor\"></path><path d=\"M6.5 7.584a1 1 0 102 0 1 1 0 00-2 0z\" stroke=\"currentColor\"></path></svg>            </a>\n            </p>\n        </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  function select_color()\n    {\n        const colors = ['#ff79c6', '#bd93f9', '#8be9fd', '#ffb86c', '#50fa7b'];\n        return colors[Math.floor(Math.random() * colors.length)];\n    }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header headerText=\"Hi, I'm Trevor\"/>\n        <div>\n        <a href='https://github.com/trevorwinger' className=\"Icon\">\n        <svg style={{color:select_color()}} viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" href='https://github.com/trevorwinger'>\n          <path d=\"M5.65 12.477a.5.5 0 10-.3-.954l.3.954zm-3.648-2.96l-.484-.128-.254.968.484.127.254-.968zM9 14.5v.5h1v-.5H9zm.063-4.813l-.054-.497a.5.5 0 00-.299.852l.352-.354zM12.5 5.913h.5V5.91l-.5.002zm-.833-2.007l-.466-.18a.5.5 0 00.112.533l.354-.353zm-.05-2.017l.456-.204a.5.5 0 00-.319-.276l-.137.48zm-2.173.792l-.126.484a.5.5 0 00.398-.064l-.272-.42zm-3.888 0l-.272.42a.5.5 0 00.398.064l-.126-.484zM3.383 1.89l-.137-.48a.5.5 0 00-.32.276l.457.204zm-.05 2.017l.354.353a.5.5 0 00.112-.534l-.466.181zM2.5 5.93H3v-.002l-.5.002zm3.438 3.758l.352.355a.5.5 0 00-.293-.851l-.06.496zM5.5 11H6l-.001-.037L5.5 11zM5 14.5v.5h1v-.5H5zm.35-2.977c-.603.19-.986.169-1.24.085-.251-.083-.444-.25-.629-.49a4.8 4.8 0 01-.27-.402c-.085-.139-.182-.302-.28-.447-.191-.281-.473-.633-.929-.753l-.254.968c.08.02.184.095.355.346.082.122.16.252.258.412.094.152.202.32.327.484.253.33.598.663 1.11.832.51.168 1.116.15 1.852-.081l-.3-.954zm4.65-.585c0-.318-.014-.608-.104-.878-.096-.288-.262-.51-.481-.727l-.705.71c.155.153.208.245.237.333.035.105.053.254.053.562h1zm-.884-.753c.903-.097 1.888-.325 2.647-.982.78-.675 1.237-1.729 1.237-3.29h-1c0 1.359-.39 2.1-.892 2.534-.524.454-1.258.653-2.099.743l.107.995zM13 5.91a3.354 3.354 0 00-.98-2.358l-.707.706c.438.44.685 1.034.687 1.655l1-.003zm-.867-1.824c.15-.384.22-.794.21-1.207l-1 .025a2.12 2.12 0 01-.142.82l.932.362zm.21-1.207a3.119 3.119 0 00-.27-1.195l-.913.408c.115.256.177.532.184.812l1-.025zm-.726-.99c.137-.481.137-.482.136-.482h-.003l-.004-.002a.462.462 0 00-.03-.007 1.261 1.261 0 00-.212-.024 2.172 2.172 0 00-.51.054c-.425.091-1.024.317-1.82.832l.542.84c.719-.464 1.206-.634 1.488-.694a1.2 1.2 0 01.306-.03l-.008-.001a.278.278 0 01-.01-.002l-.006-.002h-.003l-.002-.001c-.001 0-.002 0 .136-.482zm-2.047.307a8.209 8.209 0 00-4.14 0l.252.968a7.209 7.209 0 013.636 0l.252-.968zm-3.743.064c-.797-.514-1.397-.74-1.822-.83a2.17 2.17 0 00-.51-.053 1.259 1.259 0 00-.241.03l-.004.002h-.003l.136.481.137.481h-.001l-.002.001-.003.001a.327.327 0 01-.016.004l-.008.001h.008a1.19 1.19 0 01.298.03c.282.06.769.23 1.488.694l.543-.84zm-2.9-.576a3.12 3.12 0 00-.27 1.195l1 .025a2.09 2.09 0 01.183-.812l-.913-.408zm-.27 1.195c-.01.413.06.823.21 1.207l.932-.362a2.12 2.12 0 01-.143-.82l-1-.025zm.322.673a3.354 3.354 0 00-.726 1.091l.924.38c.118-.285.292-.545.51-.765l-.708-.706zm-.726 1.091A3.354 3.354 0 002 5.93l1-.003c0-.31.06-.616.177-.902l-.924-.38zM2 5.93c0 1.553.458 2.597 1.239 3.268.757.65 1.74.88 2.64.987l.118-.993C5.15 9.09 4.416 8.89 3.89 8.438 3.388 8.007 3 7.276 3 5.928H2zm3.585 3.404c-.5.498-.629 1.09-.584 1.704L6 10.963c-.03-.408.052-.683.291-.921l-.705-.709zM5 11v3.5h1V11H5zm5 3.5V13H9v1.5h1zm0-1.5v-2.063H9V13h1z\" fill=\"currentColor\"></path>\n        </svg>\n        </a>\n\n        <a href='#' className=\"Icon\">\n        <svg style={{color:select_color()}} viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\">\n          <path d=\"M1.5.5V0a.5.5 0 00-.5.5h.5zm0 13H1a.5.5 0 00.5.5v-.5zM4 0v15h1V0H4zM1.5 1h10V0h-10v1zM13 2.5v9h1v-9h-1zM11.5 13h-10v1h10v-1zm-9.5.5V.5H1v13h1zm11-2a1.5 1.5 0 01-1.5 1.5v1a2.5 2.5 0 002.5-2.5h-1zM11.5 1A1.5 1.5 0 0113 2.5h1A2.5 2.5 0 0011.5 0v1zM7 5h4V4H7v1z\" fill=\"currentColor\"></path>\n          </svg>\n        </a>\n\n        <a href='https://www.linkedin.com/in/trevor-winger/' className=\"Icon\">\n        <svg style={{color:select_color()}} viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\"><path d=\"M4.5 6v5m6 0V8.5a2 2 0 10-4 0V11 6M4 4.5h1M1.5.5h12a1 1 0 011 1v12a1 1 0 01-1 1h-12a1 1 0 01-1-1v-12a1 1 0 011-1z\" stroke=\"currentColor\"></path></svg>\n        </a>\n\n        <a href='https://trevorwinger.github.io/trevor-resume/' className=\"Icon\">\n        <svg style={{color:select_color()}} viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\"><path d=\"M10.5.5l.354-.354L10.707 0H10.5v.5zm3 3h.5v-.207l-.146-.147-.354.354zm-1 10.5h-10v1h10v-1zM2 13.5v-12H1v12h1zM2.5 1h8V0h-8v1zM13 3.5v10h1v-10h-1zM10.146.854l3 3 .708-.708-3-3-.708.708zM2.5 14a.5.5 0 01-.5-.5H1A1.5 1.5 0 002.5 15v-1zm10 1a1.5 1.5 0 001.5-1.5h-1a.5.5 0 01-.5.5v1zM2 1.5a.5.5 0 01.5-.5V0A1.5 1.5 0 001 1.5h1z\" fill=\"currentColor\"></path></svg>\n        </a>\n        </div>\n        <Footer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}